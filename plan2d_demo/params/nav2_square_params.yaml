planner_server:
  ros__parameters:
    use_sim_time: false
    expected_planner_frequency: 1.0
    planner_plugins:
      - GridBased
    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D"
      tolerance: 0.25
      allow_unknown: true
      downsample_costmap: false

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: map
      robot_base_frame: base_link
      footprint: "[[-0.5,-0.5],[0.5,-0.5],[0.5,0.5],[-0.5,0.5]]"
      # robot_radius: 0.25 # 테스트용으로 사용
      footprint_padding: 0.01
      rolling_window: false
      track_unknown_space: true
      resolution: 0.05
      plugins:
        - static_layer
        - inflation_layer
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.6
        cost_scaling_factor: 2.0

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_plugins:
      - FollowPath
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      critics:
        - RotateToGoal
        - ObstacleFootprint
        - GoalAlign
        - PathAlign
        - PathDist
        - GoalDist
        - PreferForward
        - Oscillation
        - Twirling
      publish_evaluation: true
      debug_trajectory_details: true
      PathAlign.scale: 6.0
      GoalAlign.scale: 4.0
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      ObstacleFootprint.scale: 1.0
      PreferForward.scale: 10.0
      RotateToGoal.scale: 0.5
      Oscillation.scale: 1.0
      Twirling.scale: 1.0
      min_vel_x: 0.3
      max_vel_x: 1.5
      max_vel_theta: 1.5
      acc_lim_x: 3.0
      acc_lim_theta: 2.5
      sim_time: 1.5
      vx_samples: 20
      vtheta_samples: 40
      sim_granularity: 0.05
      xy_goal_tolerance: 0.25
      theta_goal_tolerance: 0.25
      trans_stopped_velocity: 0.05
      theta_stopped_velocity: 0.05
    progress_checker_plugins:
      - progress_checker
    goal_checker_plugins:
      - goal_checker
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.02
      movement_time_allowance: 10.0
    goal_checker:
      plugin: "nav2_controller::StoppedGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
    odom_topic: "odom"
    cmd_vel_topic: "cmd_vel"

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 8
      height: 8
      resolution: 0.05
      footprint: "[[-0.5,-0.5],[0.5,-0.5],[0.5,0.5],[-0.5,0.5]]"
      # robot_radius: 0.25 # 테스트용으로 사용
      footprint_padding: 0.01
      plugins:
        # - static_layer
        - inflation_layer
        # - obstacle_layer
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.6 
        cost_scaling_factor: 2.0
      # 아래는 센서 적용하는 경우
      # obstacle_layer:
      #   plugin: "nav2_costmap_2d::ObstacleLayer"
      #   enabled: true
      #   observation_sources: scan
      #   scan:
      #     topic: /scan
      #     data_type: LaserScan
      #     clearing: true
      #     marking: true
      #     obstacle_range: 3.0
      #     raytrace_range: 3.5